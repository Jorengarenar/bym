digraph "Editor"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Editor\n|- buffers\l- windows\l|+ Editor()\l+ operator=()\l+ init()\l+ ~Editor()\l+ input()\l+ loop()\l+ setOption()\l+ getInstance()\l- Editor()\l- replaceByte()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -initCurses" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{Editor::InitCurses\n||+ InitCurses()\l+ ~InitCurses()\l}",height=0.2,width=0.4,color="black",URL="$structEditor_1_1InitCurses.html",tooltip="Initializes curses."];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +options" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{Options\n|- opts\l|+ Options()\l+ set()\l+ set()\l+ get()\l}",height=0.2,width=0.4,color="black",URL="$classOptions.html",tooltip=" "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +cli" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{Cli\n|- line\l|+ Cli()\l+ ~Cli()\l+ redraw()\l+ operator()()\l+ error()\l+ echo()\l- input()\l- complete()\l}",height=0.2,width=0.4,color="black",URL="$classCli.html",tooltip=" "];
  Node5 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +parser" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{Parser\n|+ commandsKeys\l|+ Parser()\l+ operator()()\l+ config()\l}",height=0.2,width=0.4,color="black",URL="$classParser.html",tooltip=" "];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +mappings" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{Mappings\n|- defaults\l- bar\l|+ Mappings()\l+ operator()()\l}",height=0.2,width=0.4,color="black",URL="$classMappings.html",tooltip=" "];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +cw" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{Window\n|+ height\l+ width\l+ currentByte\l+ prevByte\l+ startline\l+ numbers\l+ hex\l+ text\l+ statusline\l+ subWindows\l+ y\l+ x\l|+ Window()\l+ ~Window()\l+ buf()\l+ updateStatusLine()\l+ redraw()\l+ applyToSubWindows()\l+ save()\l+ replaceByte()\l+ addToByte()\l+ mvCursor()\l+ mvCursor()\l+ gotoByte()\l- genSubWindows()\l- delSubWindows()\l- inputByte()\l- print()\l- placeCursor()\l}",height=0.2,width=0.4,color="black",URL="$classWindow.html",tooltip=" "];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +opts" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{Window::Opts\n||+ Opts()\l+ cols()\l+ blank()\l}",height=0.2,width=0.4,color="black",URL="$structWindow_1_1Opts.html",tooltip=" "];
  Node7 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +w" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{Buffer\n|- path\l- bytes\l|+ Buffer()\l+ Buffer()\l+ size()\l+ empty()\l+ getOption()\l+ operator[]()\l+ operator[]()\l- save()\l}",height=0.2,width=0.4,color="black",URL="$classBuffer.html",tooltip=" "];
  Node3 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +options" ,arrowhead="odiamond",fontname="Helvetica"];
}
